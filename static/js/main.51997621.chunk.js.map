{"version":3,"sources":["Components/api/unsplash.js","Components/ImageCard.js","Components/ImageList.js","img/EWpro.jpg","img/sprite.svg","img/icon.png","img/pixe-black.png","img/nav-icon.png","Components/SearchBar.js","Components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","ImageCard","props","setSpans","height","imageRef","current","clientHeight","span","Math","ceil","setState","state","React","createRef","this","addEventListener","image","discription","urls","style","gridRowEnd","position","ref","alt","src","small","className","onClick","e","Component","ImageList","images","map","id","SearchBar","term","onFormSubmit","event","preventDefault","onSubmit","document","getElementById","blur","focus","icon","type","placeholder","value","onChange","target","toUpperCase","EW","transform","opacity","visibility","pixeb","navicon","readOnly","select","execCommand","alert","xlinkHref","sprite","window","open","App","onSearchSubmit","a","unsplash","get","params","query","per_page","response","data","results","ReactDom","render","querySelector"],"mappings":"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","file":"static/js/main.51997621.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID jILKBTex-0edV9Q4ezDWjGsKtRi3wj4JZ-pLZjifTQA',\n  },\n});\n","import React from 'react';\n\n// import sprite from '../img/sprite.svg';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { span: 0 };\n\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    // console.log(height);\n\n    const span = Math.ceil(height / 10 + 1);\n\n    this.setState({ span });\n  };\n  render() {\n    const { discription, urls } = this.props.image;\n\n    return (\n      <div\n        style={{ gridRowEnd: `span ${this.state.span}`, position: 'relative' }}\n      >\n        <img\n          ref={this.imageRef}\n          alt={discription}\n          src={urls.small}\n          className='image-card'\n          onClick={(e) => {\n            // window.open(`${e.target.src}`, '__blank');\n            // console.log(e.target);\n          }}\n        />\n        {/* <svg className='image-card--like'>\n          <use xlinkHref={sprite + '#icon-like-love-streamline'} />\n        </svg> */}\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n\n  return (\n    <div className='image__container'>\n      <div className='image-list'>{images}</div>\n    </div>\n  );\n};\n\nexport default ImageList;\n","export default __webpack_public_path__ + \"static/media/EWpro.1e2453c5.jpg\";","export default __webpack_public_path__ + \"static/media/sprite.c613030f.svg\";","export default __webpack_public_path__ + \"static/media/icon.310eb321.png\";","export default __webpack_public_path__ + \"static/media/pixe-black.27b648d0.png\";","export default __webpack_public_path__ + \"static/media/nav-icon.691dfafc.png\";","import React from 'react';\n\nimport EW from '../img/EWpro.jpg';\nimport sprite from '../img/sprite.svg';\nimport icon from '../img/icon.png';\nimport pixeb from '../img/pixe-black.png';\nimport navicon from '../img/nav-icon.png';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.term);\n    document.getElementById('input__focus').blur();\n  };\n\n  componentDidMount() {\n    document.getElementById('input__focus').focus();\n  }\n\n  render() {\n    return (\n      <div className='container__search'>\n        <div className='page-icon'>\n          <img src={icon} alt='page icon' className='page-icon--1' />\n        </div>\n        <form onSubmit={this.onFormSubmit} className='form'>\n          <input\n            id='input__focus'\n            className='form__input'\n            type='text'\n            placeholder='Search for images'\n            value={this.state.term}\n            onChange={(event) => {\n              this.setState({ term: event.target.value.toUpperCase() });\n            }}\n          />\n        </form>\n        <div className='dev'>\n          <img\n            className='dev--icon'\n            src={EW}\n            alt='my profile'\n            onClick={() => {\n              if (\n                document.getElementById('nav_bg').style.transform ===\n                'scale(150)'\n              ) {\n                document.getElementById('nav_bg').style.transform = 'scale(1)';\n                document.getElementById('navi').style.opacity = '0';\n                document.getElementById('navi').style.visibility = 'hidden';\n              } else {\n                document.getElementById('nav_bg').style.transform =\n                  'scale(150)';\n                document.getElementById('navi').style.opacity = '1';\n                document.getElementById('navi').style.visibility = 'visible';\n              }\n            }}\n          />\n          <div className='dev__background' id='nav_bg'>\n            &nbsp;\n          </div>\n          <div className='dev__nav' id='navi'>\n            <div className='dev__nav-container'>\n              <div className='dev__nav-appicon'>\n                <img src={pixeb} alt='logo of brand' />\n              </div>\n              <div className='dev__nav-name'>\n                <div className='dev__nav-name--title'>Developer:</div>\n                <div className='dev__nav-name--text'>Emmanuel</div>\n                <div className='dev__nav-name--sub'>Wilson</div>\n              </div>\n              <div className='dev__nav-icon'>\n                <img\n                  src={navicon}\n                  alt='nav icon yoo'\n                  className='dev__nav-icon'\n                />\n              </div>\n              <div className='dev__nav-sharing'>\n                <div className='dev__nav-sharing--title'>Get in Touch</div>\n                <div className='dev__nav-sharing--email'>\n                  <form className='email-form'>\n                    <input\n                      type='text'\n                      readOnly='true'\n                      className='email-form__input'\n                      value='emmanuel23jazz@gmail.com'\n                      id='emailcpy'\n                    />\n                  </form>\n                  <svg\n                    className='email-form__copy'\n                    onClick={() => {\n                      document.getElementById('emailcpy').select();\n                      document.execCommand('copy');\n                      alert('Copied');\n                    }}\n                  >\n                    <use xlinkHref={sprite + '#icon-clone'} />\n                  </svg>\n                </div>\n                <div className='dev__nav-sharing--link'>\n                  <svg\n                    className='dev__nav-sharing--link-1'\n                    onClick={() => {\n                      window.open('https://github.com/emwil23', '__blank');\n                    }}\n                  >\n                    <use xlinkHref={sprite + '#icon-github'} />\n                  </svg>\n                  <svg\n                    className='dev__nav-sharing--link-1'\n                    onClick={() => {\n                      window.open(\n                        'https://www.instagram.com/iam_e.w/',\n                        '__blank'\n                      );\n                    }}\n                  >\n                    <use xlinkHref={sprite + '#icon-instagrem'} />\n                  </svg>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport unsplash from './api/unsplash';\nimport ImageList from './ImageList';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get('/search/photos', {\n      params: {\n        query: term,\n        per_page: 50,\n      },\n    });\n\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className='container__main'>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './Components/sass/main.scss';\n\nimport App from './Components/App';\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}